server.port=8081
spring.application.name=warehouse-service

order-service.url=${ORDER_SERVICE_URL:http://localhost:8080}
spring.cloud.openfeign.client.config.order-service.url=${order-service.url}

spring.datasource.url=${SPRING_DATASOURCE_URL:jdbc:postgresql://localhost:5432/db_Items}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME:}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD:}
spring.jpa.hibernate.ddl-auto=update


kafka.producer.bootstrap-server=${KAFKA_PRODUCER_BOOTSTRAP_SERVER:localhost:9092}
kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer

kafka.consumer.group-id=warehouse-group
kafka.consumer.bootstrap-server=${KAFKA_CONSUMER_BOOTSTRAP_SERVER:localhost:9092}
kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
kafka.consumer.fixed-back-off-interval=3000
kafka.consumer.fixed-back-off-max-attempts=3
kafka.consumer.additional-properties.spring.deserializer.value.delegate.class=org.springframework.kafka.support.serializer.JsonDeserializer
kafka.consumer.additional-properties.spring.json.trusted.packages=*
kafka.consumer.additional-properties.spring.json.use.type.headers=false
kafka.consumer.additional-properties.spring.json.value.default.type=org.example.warehouseservice.dto.OrderDto

kafka.topics.order-created.name=order-created-topic
kafka.topics.order-created.partitions=2
kafka.topics.order-created.replicas=1

kafka.topics.order-created-dlt.name=order-created-topic-dlt
kafka.topics.order-created-dlt.partitions=2
kafka.topics.order-created-dlt.replicas=1